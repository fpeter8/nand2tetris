// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Inc16(in=regOut, out=plus);
    // Mux16(a=regOut, b=plus, sel=inc, out=ifinc);
    // Mux16(a=ifinc, b=in, sel=load, out=ifload);
    // Mux16(a=ifload, sel=reset, out=ifreset);
    // Register(in=ifreset, load=true, out=out, out=regOut);

    Not(in=reset, out=notreset);
    And(a=load, b=notreset, out=yesload);
    Not(in=yesload, out=notload);
    And(a=inc, b=notload, out=yesinctemp);
    And(a=yesinctemp, b=notreset, out=yesinc);

    Register(in=aluout, load=true, out=out, out=regout);
    Or(a=reset, b=yesload, out=resetorload);
    Or(a=yesload, b=yesinc, out=loadorinc);
    Or(a=reset, b=yesinc, out=resetorinc);
    ALU(x=regout, zx=resetorload, nx=yesinc,
        y=in, zy=resetorinc, ny=yesinc,
        f=true, no=yesinc,
        out=aluout);
}
