// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);
    RAM512(in=in, address=address[3..11], out=oa, load=la);
    RAM512(in=in, address=address[3..11], out=ob, load=lb);
    RAM512(in=in, address=address[3..11], out=oc, load=lc);
    RAM512(in=in, address=address[3..11], out=od, load=ld);
    RAM512(in=in, address=address[3..11], out=oe, load=le);
    RAM512(in=in, address=address[3..11], out=of, load=lf);
    RAM512(in=in, address=address[3..11], out=og, load=lg);
    RAM512(in=in, address=address[3..11], out=oh, load=lh);
    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[0..2], out=out);
}
